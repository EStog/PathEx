from .nary_operator import NAryOperator

__all__ = ['Shuffle']


class Shuffle(NAryOperator):
    """
    `Shuffle` is semantically equivalent to shuffle of languages. That is, `Shuffle(A, B)` is the set of the shuffle of each pair of strings `(a, b)` where `a` is generated by `A` and `b` is generated by `B`.

    The shuffle (`//`) of two letters `a` and `b` is:
        `a // b = {ab, ba}`
    The shuffle of two strings `ab` and `xy` is:
        `ab // xy = a + (b // xy) | x + (ab // y)`
    Where `+` is concatenation and `|` is union.
    Also see that:
        `aE // xy = axy | x + (a // y)` and
        `ab // xE = a + (b // x) | xab`
        `E // E = E`
    where `E` is the empty string.

    Example:
        >>> from pathpy import Concatenation as C, Shuffle as S

        >>> exp = S('ab')
        >>> assert exp.get_language() == exp.get_generator().get_language() == {'ab', 'ba'}

        >>> exp = S('aa')
        >>> assert exp.get_language() == exp.get_generator().get_language() == {'aa'}

        >>> exp = C('abc') // C('xy')
        >>> assert exp.get_language() == exp.get_generator().get_language() == {'abcxy', 'abxcy', 'abxyc', 'axbcy', 'axbyc', 'axybc', 'xabcy', 'xabyc', 'xaybc', 'xyabc'}
    """
